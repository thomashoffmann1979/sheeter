#!/usr/bin/env node

var fs = require('fs'),
    program = require('commander'),
    pjson = require('../package.json'),
    XLSXReader = require('../lib/reader/xlsxreader').XLSXReader,
    path =  require('path'),
    sheeter,
    filename,
    sheetname,
    startTime,
    Sheeter = require('../lib/main').Sheeter;

var exdendedHelp = function(){
    var examples = [];
    examples.push( '  Examples:');
    examples.push( '    $ '+program._name+' myfile.xlsx');
    examples.push( '    \tOpen the file, calculate all formulas inside and display the sheet list (if more than one sheet is inside) or');
    examples.push( '    \tshow the content of the only sheet.');
    examples.push( '');
    examples.push( '    $ '+program._name+' -i myfile.xlsx');
    examples.push( '    \tSame as above, but no formula will be calculated.');
    examples.push( '');
    examples.push( '    $ '+program._name+' myfile.xlsx "Table 1"');
    examples.push( '    \tDisplays the content of the sheet "Table 1".');
    examples.push( '');
    examples.push( '  Note:');
    examples.push( '    If your sheet names contain any none-ascii charactes, you should use double qoutes.');
    examples.push( '');
    console.log(examples.join("\n"));
}
program
    .version(pjson.version)
    .description('Spreadsheet in your console')
    .usage('[options] <file> [sheet]')
    .option('-i, --inactive', 'Don\'t calculate any formulas')
    .option('-f, --full', 'Display the full column width.')
    .option('-t, --time', 'Display the elapsed time.')
    .on('--help', exdendedHelp)
    .parse(process.argv);

if ( (program.args.length >0 ) && (program.args.length < 3) ){
    
    startTime = (new Date()).getTime();
    
//    try{
        sheeter = new Sheeter();
        sheeter.on('opened',function(wb){
            var list = wb.getWorkSheetList();
            wb.output({
                sheet: program.args[1],
                full: program.full
            });
            
            if (program.time){
                console.log( ((new Date()).getTime()-startTime)/1000+"s");
            }
        });
        sheeter.open(program.args[0],(typeof program.inactive=='undefined'));
//    }catch(err){
//        console.log('sheeter.js:54',err)
//    }
}else{
    program.help()
}
